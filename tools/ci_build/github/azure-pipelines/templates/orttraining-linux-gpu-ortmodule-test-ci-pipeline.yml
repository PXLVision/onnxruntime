parameters:
- name: DockerImageTag
  type: string

steps:
- bash: |
    docker run \
      --gpus all \
      --shm-size=1024m \
      --rm \
      --volume $(Build.SourcesDirectory):/onnxruntime_src \
      --volume $(Build.BinariesDirectory):/build \
      ${{ parameters.DockerImageTag }} \
        pip install --force-reinstall --user -r /onnxruntime_src/tools/ci_build/github/linux/docker/scripts/training/ortmodule/stage1/requirements.txt
  displayName: 'Install ORTModule Test Dependencies 1'
  condition: succeededOrFailed()

- bash: |
    docker run \
      --gpus all \
      --shm-size=1024m \
      --rm \
      --volume $(Build.SourcesDirectory):/onnxruntime_src \
      --volume $(Build.BinariesDirectory):/build \
      ${{ parameters.DockerImageTag }} \
        pip install --force-reinstall --user  -r /onnxruntime_src/tools/ci_build/github/linux/docker/scripts/training/ortmodule/stage2/requirements.txt
  displayName: 'Install ORTModule Test Dependencies 2'
  condition: succeededOrFailed()

- bash: tools/ci_build/github/linux/docker/scripts/training/azure_scale_set_vm_mount_test_data.sh -p $(orttrainingtestdata-storage-key) -s "//orttrainingtestdata.file.core.windows.net/mnist" -d "/mnist"
  displayName: 'Mount MNIST'
  condition: succeededOrFailed()

- bash: tools/ci_build/github/linux/docker/scripts/training/azure_scale_set_vm_mount_test_data.sh -p $(orttrainingtestdata-storage-key) -s "//orttrainingtestdata.file.core.windows.net/bert-data" -d "/bert_data"
  displayName: 'Mount bert-data'
  condition: succeededOrFailed()

- bash: tools/ci_build/github/linux/docker/scripts/training/azure_scale_set_vm_mount_test_data.sh -p $(orttrainingtestdata-storage-key) -s "//orttrainingtestdata.file.core.windows.net/hf-models-cache" -d "/hf_models_cache"
  displayName: 'Mount hf-models-cache'
  condition: succeededOrFailed()

  # Entry point for all ORTModule tests
- script: |
    docker run \
      --gpus all \
      --shm-size=1024m \
      --rm \
      --volume $(Build.SourcesDirectory):/onnxruntime_src \
      --volume $(Build.BinariesDirectory):/build \
      --volume /mnist:/mnist \
      --volume /bert_data:/bert_data \
      --volume /hf_models_cache:/hf_models_cache \
      ${{ parameters.DockerImageTag }} \
        /build/RelWithDebInfo/launch_test.py \
          --cmd_line_with_args "python orttraining_ortmodule_tests.py --mnist /mnist --bert_data /bert_data/hf_data/glue_data/CoLA/original/raw --transformers_cache /hf_models_cache/huggingface/transformers" \
          --cwd /build/RelWithDebInfo \
  displayName: 'Run orttraining_ortmodule_tests.py'
  condition: succeededOrFailed()
  timeoutInMinutes: 60
